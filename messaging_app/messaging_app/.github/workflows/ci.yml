name: Django CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: testpassword
          MYSQL_DATABASE: messaging_test
          MYSQL_USER: testuser
          MYSQL_PASSWORD: testpass
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip packages
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-dev libmysqlclient-dev build-essential

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Set up Django test environment variables
        run: |
          echo "DJANGO_SETTINGS_MODULE=messaging_app.settings_test" >> $GITHUB_ENV
          echo "TEST=True" >> $GITHUB_ENV
          echo "MYSQL_HOST=127.0.0.1" >> $GITHUB_ENV
          echo "MYSQL_PORT=3306" >> $GITHUB_ENV
          echo "MYSQL_DATABASE=messaging_test" >> $GITHUB_ENV
          echo "MYSQL_USER=testuser" >> $GITHUB_ENV
          echo "MYSQL_PASSWORD=testpass" >> $GITHUB_ENV

      - name: Wait for MySQL
        run: |
          for i in {1..30}; do
            if mysql -h 127.0.0.1 -P 3306 -u testuser -ptestpass -e "SELECT 1" >/dev/null 2>&1; then
              echo "MySQL is ready!"
              break
            fi
            echo "Waiting for MySQL... ($i/30)"
            sleep 2
          done

      - name: Create test database
        run: |
          mysql -h 127.0.0.1 -P 3306 -u testuser -ptestpass -e "CREATE DATABASE IF NOT EXISTS messaging_test CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;"

      - name: Run Django migrations
        run: |
          python manage.py migrate
        env:
          DJANGO_SETTINGS_MODULE: messaging_app.settings_test

      - name: Run tests with pytest
        run: |
          pytest chats/tests.py -v --tb=short --junitxml=test-report.xml --cov=. --cov-report=xml --cov-report=html
        env:
          DJANGO_SETTINGS_MODULE: messaging_app.settings_test

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-py${{ matrix.python-version }}
          path: |
            test-report.xml
            htmlcov/
            coverage.xml

      - name: Publish test results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          test_results_files: test-report.xml

      - name: Publish coverage reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-py${{ matrix.python-version }}
          path: htmlcov/

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install linting tools
        run: |
          python -m pip install --upgrade pip
          pip install flake8

      - name: Run flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
