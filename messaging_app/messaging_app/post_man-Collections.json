{
  "info": {
    "name": "Messaging App API",
    "description": "Postman collection for Django REST Framework messaging application",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "1.0.0"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{access_token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://127.0.0.1:8000",
      "type": "string"
    },
    {
      "key": "access_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "refresh_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "conversation_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "message_id",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Get JWT Token",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"username\": \"testuser\",\n    \"password\": \"testpassword\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/token/",
              "host": ["{{base_url}}"],
              "path": ["api", "token", ""]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const responseJson = pm.response.json();",
                  "    pm.collectionVariables.set('access_token', responseJson.access);",
                  "    pm.collectionVariables.set('refresh_token', responseJson.refresh);",
                  "    console.log('Access token saved to collection variables');",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Refresh JWT Token",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"refresh\": \"{{refresh_token}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/token/refresh/",
              "host": ["{{base_url}}"],
              "path": ["api", "token", "refresh", ""]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const responseJson = pm.response.json();",
                  "    pm.collectionVariables.set('access_token', responseJson.access);",
                  "    console.log('Access token refreshed');",
                  "}"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Conversations",
      "item": [
        {
          "name": "List Conversations",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/conversations/?search=&ordering=-created_at",
              "host": ["{{base_url}}"],
              "path": ["api", "conversations", ""],
              "query": [
                {
                  "key": "search",
                  "value": ""
                },
                {
                  "key": "ordering",
                  "value": "-created_at"
                }
              ]
            }
          }
        },
        {
          "name": "Create Conversation",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"participants\": [\"{{user_id}}\"]\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/conversations/",
              "host": ["{{base_url}}"],
              "path": ["api", "conversations", ""]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const responseJson = pm.response.json();",
                  "    pm.collectionVariables.set('conversation_id', responseJson.conversation_id);",
                  "    console.log('Conversation ID saved:', responseJson.conversation_id);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Conversation Details",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/conversations/{{conversation_id}}/",
              "host": ["{{base_url}}"],
              "path": ["api", "conversations", "{{conversation_id}}", ""]
            }
          }
        },
        {
          "name": "Update Conversation",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"participants\": [\"{{user_id}}\", \"{{other_user_id}}\"]\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/conversations/{{conversation_id}}/",
              "host": ["{{base_url}}"],
              "path": ["api", "conversations", "{{conversation_id}}", ""]
            }
          }
        },
        {
          "name": "Partial Update Conversation",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"participants\": [\"{{user_id}}\", \"{{other_user_id}}\"]\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/conversations/{{conversation_id}}/",
              "host": ["{{base_url}}"],
              "path": ["api", "conversations", "{{conversation_id}}", ""]
            }
          }
        },
        {
          "name": "Delete Conversation",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/conversations/{{conversation_id}}/",
              "host": ["{{base_url}}"],
              "path": ["api", "conversations", "{{conversation_id}}", ""]
            }
          }
        },
        {
          "name": "Filter Conversations by Participant",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/conversations/?participants={{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "conversations", ""],
              "query": [
                {
                  "key": "participants",
                  "value": "{{user_id}}"
                }
              ]
            }
          }
        },
        {
          "name": "Search Conversations",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/conversations/?search=testuser",
              "host": ["{{base_url}}"],
              "path": ["api", "conversations", ""],
              "query": [
                {
                  "key": "search",
                  "value": "testuser"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Messages",
      "item": [
        {
          "name": "List All Messages",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/messages/?ordering=-sent_at",
              "host": ["{{base_url}}"],
              "path": ["api", "messages", ""],
              "query": [
                {
                  "key": "ordering",
                  "value": "-sent_at"
                }
              ]
            }
          }
        },
        {
          "name": "Create Message",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"conversation\": \"{{conversation_id}}\",\n    \"message_body\": \"Hello, this is a test message!\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/messages/",
              "host": ["{{base_url}}"],
              "path": ["api", "messages", ""]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const responseJson = pm.response.json();",
                  "    pm.collectionVariables.set('message_id', responseJson.message_id);",
                  "    console.log('Message ID saved:', responseJson.message_id);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Message Details",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/messages/{{message_id}}/",
              "host": ["{{base_url}}"],
              "path": ["api", "messages", "{{message_id}}", ""]
            }
          }
        },
        {
          "name": "Update Message",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"conversation\": \"{{conversation_id}}\",\n    \"message_body\": \"Updated message content!\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/messages/{{message_id}}/",
              "host": ["{{base_url}}"],
              "path": ["api", "messages", "{{message_id}}", ""]
            }
          }
        },
        {
          "name": "Partial Update Message",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"message_body\": \"Partially updated message content!\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/messages/{{message_id}}/",
              "host": ["{{base_url}}"],
              "path": ["api", "messages", "{{message_id}}", ""]
            }
          }
        },
        {
          "name": "Delete Message",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/messages/{{message_id}}/",
              "host": ["{{base_url}}"],
              "path": ["api", "messages", "{{message_id}}", ""]
            }
          }
        },
        {
          "name": "Filter Messages by Conversation",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/messages/?conversation={{conversation_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "messages", ""],
              "query": [
                {
                  "key": "conversation",
                  "value": "{{conversation_id}}"
                }
              ]
            }
          }
        },
        {
          "name": "Filter Messages by Sender",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/messages/?sender={{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "messages", ""],
              "query": [
                {
                  "key": "sender",
                  "value": "{{user_id}}"
                }
              ]
            }
          }
        },
        {
          "name": "Search Messages",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/messages/?search=hello",
              "host": ["{{base_url}}"],
              "path": ["api", "messages", ""],
              "query": [
                {
                  "key": "search",
                  "value": "hello"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Nested Routes - Conversation Messages",
      "item": [
        {
          "name": "List Messages in Conversation",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/conversations/{{conversation_id}}/messages/?ordering=-sent_at",
              "host": ["{{base_url}}"],
              "path": [
                "api",
                "conversations",
                "{{conversation_id}}",
                "messages",
                ""
              ],
              "query": [
                {
                  "key": "ordering",
                  "value": "-sent_at"
                }
              ]
            }
          }
        },
        {
          "name": "Create Message in Conversation",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"conversation\": \"{{conversation_id}}\",\n    \"message_body\": \"This is a nested route message!\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/conversations/{{conversation_id}}/messages/",
              "host": ["{{base_url}}"],
              "path": [
                "api",
                "conversations",
                "{{conversation_id}}",
                "messages",
                ""
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const responseJson = pm.response.json();",
                  "    pm.collectionVariables.set('message_id', responseJson.message_id);",
                  "    console.log('Message ID saved:', responseJson.message_id);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Message in Conversation",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/conversations/{{conversation_id}}/messages/{{message_id}}/",
              "host": ["{{base_url}}"],
              "path": [
                "api",
                "conversations",
                "{{conversation_id}}",
                "messages",
                "{{message_id}}",
                ""
              ]
            }
          }
        },
        {
          "name": "Update Message in Conversation",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"conversation\": \"{{conversation_id}}\",\n    \"message_body\": \"Updated nested route message!\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/conversations/{{conversation_id}}/messages/{{message_id}}/",
              "host": ["{{base_url}}"],
              "path": [
                "api",
                "conversations",
                "{{conversation_id}}",
                "messages",
                "{{message_id}}",
                ""
              ]
            }
          }
        },
        {
          "name": "Partial Update Message in Conversation",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"message_body\": \"Partially updated nested message!\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/conversations/{{conversation_id}}/messages/{{message_id}}/",
              "host": ["{{base_url}}"],
              "path": [
                "api",
                "conversations",
                "{{conversation_id}}",
                "messages",
                "{{message_id}}",
                ""
              ]
            }
          }
        },
        {
          "name": "Delete Message in Conversation",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/conversations/{{conversation_id}}/messages/{{message_id}}/",
              "host": ["{{base_url}}"],
              "path": [
                "api",
                "conversations",
                "{{conversation_id}}",
                "messages",
                "{{message_id}}",
                ""
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Admin & Debug",
      "item": [
        {
          "name": "Django Admin",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/admin/",
              "host": ["{{base_url}}"],
              "path": ["admin", ""]
            }
          }
        },
        {
          "name": "API Auth (Session)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api-auth/login/",
              "host": ["{{base_url}}"],
              "path": ["api-auth", "login", ""]
            }
          }
        }
      ]
    }
  ]
}
